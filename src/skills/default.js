/**
 * LÃ³gicas padrÃ£o do chabot para mensagens que naÃ£o sÃ£o de texto
 */
const Util = require('../util/util');

/**
 * Responde mensagens do tipo audio
 * 
 * @param {*} _client Classe Client global
 * @param {*} _msg Mensagem recebida pelo onMessage
 */
async function answerAudio(_client, _msg) {
    await _msg.reply('Ainda nÃ£o sei lidar com Ã¡udios ðŸ˜•')
        .catch(err => Util.logError('[SKILL] Erro na resposta padrÃ£o de audio -> ', err));
}

/**
 * Responde mensagens do tipo sticker
 * 
 * @param {*} _client Classe Client global
 * @param {*} _msg Mensagem recebida pelo onMessage
 */
async function answerSticker(_client, _msg) {
    await _msg.reply('Ainda nÃ£o sei lidar com figurinhas ðŸ˜•')
        .catch(err => Util.logError('[SKILL] Erro na resposta padrÃ£o de sticker -> ', err));
}

/**
 * Responde mensagens do tipo video
 * 
 * @param {*} _client Classe Client global
 * @param {*} _msg Mensagem recebida pelo onMessage
 */
async function answerVideo(_client, _msg) {
    await _msg.reply('Ainda nÃ£o sei lidar com vÃ­deos ðŸ˜•')
        .catch(err => Util.logError('[SKILL] Erro na resposta padrÃ£o de video -> ', err));
}

/**
 * Responde mensagens do tipo imagem
 * 
 * @param {*} _client Classe Client global
 * @param {*} _msg Mensagem recebida pelo onMessage
 */
async function answerImage(_client, _msg) {
    await _msg.reply('Ainda nÃ£o sei lidar com imagens ðŸ˜•')
        .catch(err => Util.logError('[SKILL] Erro na resposta padrÃ£o de imagem -> ', err));
}

/**
 * Responde mensagens do tipo contato
 * 
 * @param {*} _client Classe Client global
 * @param {*} _msg Mensagem recebida pelo onMessage
 */
async function answerVCard(_client, _msg) {
    await _msg.reply('Ainda nÃ£o sei lidar com contatos ðŸ˜•')
        .catch(err => Util.logError('[SKILL] Erro na resposta padrÃ£o de contato -> ', err));
}

/**
 * Responde mensagens do tipo localizaÃ§Ã£o
 * 
 * @param {*} _client Classe Client global
 * @param {*} _msg Mensagem recebida pelo onMessage
 */
async function answerLocation(_client, _msg) {
    await _msg.reply('Ainda nÃ£o sei lidar com localizaÃ§Ãµes ðŸ˜•')
        .catch(err => Util.logError('[SKILL] Erro na resposta padrÃ£o de local -> ', err));
    // msg.reply(new Location(37.422, -122.084, 'Googleplex\nGoogle Headquarters'));
}

/**
 * Responde mensagens do tipo documento
 * 
 * @param {*} _client Classe Client global
 * @param {*} _msg Mensagem recebida pelo onMessage
 */
async function answerDocument(_client, _msg) {
    await _msg.reply('[SKILL] Ainda nÃ£o sei lidar com documentos ðŸ˜•')
        .catch(err => Util.logError('[SKILL] Erro na resposta padrÃ£o de local -> ', err));
}

// eslint-disable-next-line no-unused-vars
const skill = module.exports = {
    answerAudio,
    answerDocument,
    answerImage,
    answerLocation,
    answerSticker,
    answerVCard,
    answerVideo,
};